/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.businesscommunications.v1.model;

/**
 * Details about an RCS for Business agent launch.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Business Communications. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RcsBusinessMessagingLaunch extends com.google.api.client.json.GenericJson {

  /**
   * Required. Launch details for each supported region. Key represented by
   * RcsBusinessMessagingRegion.name. To launch an agent (when the agent hasn't launched before),
   * add an object containing a map of only keys for all regions you want the agent to launch to. To
   * launch an agent (when the agent has launched before), add an object containing a map of only
   * keys for all regions the agent is already launched on and all regions the agent wants to launch
   * to. For more information, see the Launch an agent to one or more regions documentation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, RcsBusinessMessagingRegionLaunch> launchDetails;

  static {
    // hack to force ProGuard to consider RcsBusinessMessagingRegionLaunch used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(RcsBusinessMessagingRegionLaunch.class);
  }

  /**
   * Launch region for an agent. Ignored: This field is deprecated. Hosting region can only be
   * specified during agent creation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String launchRegion;

  /**
   * Required. Questionnaire about agent launch details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Questionnaire questionnaire;

  /**
   * Required. Launch details for each supported region. Key represented by
   * RcsBusinessMessagingRegion.name. To launch an agent (when the agent hasn't launched before),
   * add an object containing a map of only keys for all regions you want the agent to launch to. To
   * launch an agent (when the agent has launched before), add an object containing a map of only
   * keys for all regions the agent is already launched on and all regions the agent wants to launch
   * to. For more information, see the Launch an agent to one or more regions documentation.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, RcsBusinessMessagingRegionLaunch> getLaunchDetails() {
    return launchDetails;
  }

  /**
   * Required. Launch details for each supported region. Key represented by
   * RcsBusinessMessagingRegion.name. To launch an agent (when the agent hasn't launched before),
   * add an object containing a map of only keys for all regions you want the agent to launch to. To
   * launch an agent (when the agent has launched before), add an object containing a map of only
   * keys for all regions the agent is already launched on and all regions the agent wants to launch
   * to. For more information, see the Launch an agent to one or more regions documentation.
   * @param launchDetails launchDetails or {@code null} for none
   */
  @com.google.errorprone.annotations.CanIgnoreReturnValue
  public RcsBusinessMessagingLaunch setLaunchDetails(java.util.Map<String, RcsBusinessMessagingRegionLaunch> launchDetails) {
    this.launchDetails = launchDetails;
    return this;
  }

  /**
   * Launch region for an agent. Ignored: This field is deprecated. Hosting region can only be
   * specified during agent creation.
   * @return value or {@code null} for none
   */
  public java.lang.String getLaunchRegion() {
    return launchRegion;
  }

  /**
   * Launch region for an agent. Ignored: This field is deprecated. Hosting region can only be
   * specified during agent creation.
   * @param launchRegion launchRegion or {@code null} for none
   */
  @com.google.errorprone.annotations.CanIgnoreReturnValue
  public RcsBusinessMessagingLaunch setLaunchRegion(java.lang.String launchRegion) {
    this.launchRegion = launchRegion;
    return this;
  }

  /**
   * Required. Questionnaire about agent launch details.
   * @return value or {@code null} for none
   */
  public Questionnaire getQuestionnaire() {
    return questionnaire;
  }

  /**
   * Required. Questionnaire about agent launch details.
   * @param questionnaire questionnaire or {@code null} for none
   */
  @com.google.errorprone.annotations.CanIgnoreReturnValue
  public RcsBusinessMessagingLaunch setQuestionnaire(Questionnaire questionnaire) {
    this.questionnaire = questionnaire;
    return this;
  }

  @Override
  public RcsBusinessMessagingLaunch set(String fieldName, Object value) {
    return (RcsBusinessMessagingLaunch) super.set(fieldName, value);
  }

  @Override
  public RcsBusinessMessagingLaunch clone() {
    return (RcsBusinessMessagingLaunch) super.clone();
  }

}
