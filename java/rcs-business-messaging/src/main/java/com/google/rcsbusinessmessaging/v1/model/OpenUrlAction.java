/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.rcsbusinessmessaging.v1.model;

/**
 * Opens the user's default web browser app to the specified URL. If the user has an app installed
 * that is registered as the default handler for the URL, then this app will be opened instead, and
 * its icon will be used in the suggested action UI.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the RCS Business Messaging API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class OpenUrlAction extends com.google.api.client.json.GenericJson {

  /**
   * URL open application, browser or webview. To check whether a user's device supports webview
   * mode, run a capability check first. See the documentation for details:
   * https://developers.google.com/business-communications/rcs-business-
   * messaging/guides/build/capabilities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String application;

  /**
   * Accessbility description for webview.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * URL. Must be a valid URI as defined in RFC 3986. Maximum 2048 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * View mode for webview
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String webviewViewMode;

  /**
   * URL open application, browser or webview. To check whether a user's device supports webview
   * mode, run a capability check first. See the documentation for details:
   * https://developers.google.com/business-communications/rcs-business-
   * messaging/guides/build/capabilities.
   * @return value or {@code null} for none
   */
  public java.lang.String getApplication() {
    return application;
  }

  /**
   * URL open application, browser or webview. To check whether a user's device supports webview
   * mode, run a capability check first. See the documentation for details:
   * https://developers.google.com/business-communications/rcs-business-
   * messaging/guides/build/capabilities.
   * @param application application or {@code null} for none
   */
  public OpenUrlAction setApplication(java.lang.String application) {
    this.application = application;
    return this;
  }

  /**
   * Accessbility description for webview.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Accessbility description for webview.
   * @param description description or {@code null} for none
   */
  public OpenUrlAction setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * URL. Must be a valid URI as defined in RFC 3986. Maximum 2048 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * URL. Must be a valid URI as defined in RFC 3986. Maximum 2048 characters.
   * @param url url or {@code null} for none
   */
  public OpenUrlAction setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  /**
   * View mode for webview
   * @return value or {@code null} for none
   */
  public java.lang.String getWebviewViewMode() {
    return webviewViewMode;
  }

  /**
   * View mode for webview
   * @param webviewViewMode webviewViewMode or {@code null} for none
   */
  public OpenUrlAction setWebviewViewMode(java.lang.String webviewViewMode) {
    this.webviewViewMode = webviewViewMode;
    return this;
  }

  @Override
  public OpenUrlAction set(String fieldName, Object value) {
    return (OpenUrlAction) super.set(fieldName, value);
  }

  @Override
  public OpenUrlAction clone() {
    return (OpenUrlAction) super.clone();
  }

}
