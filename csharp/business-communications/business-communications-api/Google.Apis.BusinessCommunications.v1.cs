// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.6.0
//     C# generator version: 1.10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \mainpage
 *   Business Communications Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='http://tobedone'>Business Communications</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>0
 *      <tr><th>API Docs
 *          <td><a href='http://tobedone'>
 *              http://tobedone</a>
 *      <tr><th>Discovery Name<td>businesscommunications
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Business Communications can be found at
 * <a href='http://tobedone'>http://tobedone</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.BusinessCommunications.v1.Data
{    

    /// <summary>A conversational entity that represents a brand.</summary>
    public class Agent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The name of the brand associated with the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("brandName")]
        public virtual string BrandName { get; set; } 

        /// <summary>Required. The name that the agent displays to users. Maximum 100 characters. Not modifiable after
        /// agent verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The unique identifier of the agent. Read-only. Defined by the platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Detailed agent information for RCS for Business.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rcsBusinessMessagingAgent")]
        public virtual RcsBusinessMessagingAgent RcsBusinessMessagingAgent { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details about an agent launch.</summary>
    public class AgentLaunch : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The identifier for launch.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Launch details for an RCS for Business agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rcsBusinessMessaging")]
        public virtual RcsBusinessMessagingLaunch RcsBusinessMessaging { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Performance metrics for an agent in a country. *Note*: This API is expected to evolve. Your client
    /// should be resilient to the addition of new fields in the future.</summary>
    public class AgentPerformance : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The agent's use case</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUseCase")]
        public virtual string AgentUseCase { get; set; } 

        /// <summary>The country dimension for the given performance metrics. Given as an [ISO 3166 Alpha-2 country
        /// code](https://www.iso.org/obp/ui/#search/code/). For example, "US" for the United States of
        /// America.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>Required. The name that the agent displays to users. Maximum 100 characters. Not modifiable after
        /// agent verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The timestamp representing the end of the period for which metrics were calculated. Metrics,
        /// including reputation, are calculated based on data up to this timestamp. This timestamp is the most recent
        /// midnight Pacific Time (PT). *Note*: Due to daily processing after midnight PT, metrics might not be updated
        /// until several hours after midnight PT.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricsPeriodEndTime")]
        public virtual object MetricsPeriodEndTime { get; set; } 

        /// <summary>The unique identifier of the agent. Defined by the platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Reputation of the agent in the given country.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reputation")]
        public virtual string Reputation { get; set; } 

        /// <summary>Traffic limit for the agent (messages per user per month) in the given country. If the agent is not
        /// subject to traffic limits, the value will not be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trafficLimit")]
        public virtual System.Nullable<int> TrafficLimit { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details about the verification information for an agent.</summary>
    public class AgentVerification : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The contact details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentVerificationContact")]
        public virtual AgentVerificationContact AgentVerificationContact { get; set; } 

        /// <summary>Required. The identifier for verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The verification state.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verificationState")]
        public virtual string VerificationState { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Verification contact details for an agent.</summary>
    public class AgentVerificationContact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The email address of the brand representative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("brandContactEmailAddress")]
        public virtual string BrandContactEmailAddress { get; set; } 

        /// <summary>Required. Name of a brand representative who can verify the accuracy of the launch details and that
        /// the partner represents the brand.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("brandContactName")]
        public virtual string BrandContactName { get; set; } 

        /// <summary>Required. The public website of the brand to verify the domain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("brandWebsiteUrl")]
        public virtual string BrandWebsiteUrl { get; set; } 

        /// <summary>Required. The email address of the partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partnerEmailAddress")]
        public virtual string PartnerEmailAddress { get; set; } 

        /// <summary>Required. The name of the partner requesting the verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partnerName")]
        public virtual string PartnerName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about webhook for a Business Messages agent.</summary>
    public class AgentWebhookIntegration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Input only. The verification token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verificationToken")]
        public virtual string VerificationToken { get; set; } 

        /// <summary>Required. The webhook URL where the messages are delivered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookUri")]
        public virtual string WebhookUri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A brand (business, organization, or group) that is represented by an agent.</summary>
    public class Brand : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The display name of the brand. Maximum 100 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Output only. The unique identifier of the brand. Defined by the platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Point of contact.</summary>
    public class Contact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Email address of the contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>Name of the contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Title of the contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>RCS for Business critical agent information.</summary>
    public class CriticalAgent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Output only. Identifier. The agent ID of the critical agent, for example
        /// abc@rbm.goog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about a Business Messages agent and Dialogflow CX project association.</summary>
    public class DialogflowCxIntegration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. If `ENABLED`, Business Messages automatically sends the Dialogflow responses to
        /// users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoResponseStatus")]
        public virtual string AutoResponseStatus { get; set; } 

        /// <summary>Required. The Dialogflow Agent ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAgentId")]
        public virtual string DialogflowAgentId { get; set; } 

        /// <summary>Required. The Dialogflow project ID. Non-editable. To change this value, you must delete the
        /// Dialogflow project from this agent, then create a new integration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowProjectId")]
        public virtual string DialogflowProjectId { get; set; } 

        /// <summary>Output only. The service account that must be configured in the Dialogflow project with the
        /// "Dialogflow Console Agent Editor" and "Dialogflow API Client" roles. This is required to provide access to
        /// the Dialogflow API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowServiceAccountEmail")]
        public virtual string DialogflowServiceAccountEmail { get; set; } 

        /// <summary>Output only. Information about the operating state of the Dialogflow integration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationInfo")]
        public virtual OperationInfo OperationInfo { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A knowledge base document. A document can be either a website URL or a URL to a CSV file. URLs must be
    /// publicly available. CSV files must contain one or more question/answer pairs, with one row for each
    /// pair.</summary>
    public class DialogflowDocument : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Display name of a FAQ document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>URL of a FAQ document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqUrl")]
        public virtual string FaqUrl { get; set; } 

        /// <summary>System-generated Document ID. If the brand identifier is "1234", the agent identifier is "5678",
        /// the integration identifier is "9092", the knowledge base identifier is "1111", and the document identifier
        /// is "2222", this parameter resolves to
        /// "brands/1234/agents/5678/integrations/9092/knowledgebases/1111/documents/2222".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Output only. Operation Information is populated only when a document is added to an existing
        /// knowledge base.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationInfo")]
        public virtual OperationInfo OperationInfo { get; set; } 

        /// <summary>The raw content of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawContent")]
        public virtual string RawContent { get; set; } 

        /// <summary>Output only. Time at which the document was created/updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about a Business Messages agent and Dialogflow ES project association.</summary>
    public class DialogflowEsIntegration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. If `ENABLED`, Business Messages automatically sends the Dialogflow responses to
        /// users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoResponseStatus")]
        public virtual string AutoResponseStatus { get; set; } 

        /// <summary>Knowledge bases associated with the Dialogflow project. Optional</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowKnowledgeBases")]
        public virtual System.Collections.Generic.IList<DialogflowKnowledgebase> DialogflowKnowledgeBases { get; set; } 

        /// <summary>Required. The Dialogflow project ID. Non-editable. To change this value, you must delete the
        /// Dialogflow project from this agent, then create a new integration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowProjectId")]
        public virtual string DialogflowProjectId { get; set; } 

        /// <summary>Output only. The service account that must be configured in the Dialogflow project with the
        /// "Dialogflow Console Agent Editor" and "Dialogflow API Client" roles. This is required to provide access to
        /// the Dialogflow API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowServiceAccountEmail")]
        public virtual string DialogflowServiceAccountEmail { get; set; } 

        /// <summary>Output only. Information about the operating state of the Dialogflow integration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationInfo")]
        public virtual OperationInfo OperationInfo { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Knowledge base information. A knowledge base can have multiple FAQ URLs.</summary>
    public class DialogflowKnowledgebase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Knowledge base display name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Knowledge base documents. Optional</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<DialogflowDocument> Documents { get; set; } 

        /// <summary>Output only. Knowledgebase ID. Unique identifier returned by Dialogflow service after creation of a
        /// knowledge base. If the brand identifier is "1234", the agent identifier is "5678", the integration
        /// identifier is "9092", and the knowledge base identifier is "1111", this parameter resolves to
        /// "brands/1234/agents/5678/integrations/9092/knowledgebases/1111".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Output only. Time at which the knowledge base was created or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An email associated with the agent.</summary>
    public class EmailEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. An email address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; } 

        /// <summary>Required. Label for the email address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance: service Foo {
    /// rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Contact details</summary>
    public class GoogleCommunicationsBusinesscommunicationsV1PartnerContact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Email of the contact person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>Name of the contact person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Phone number of the contact person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual Phone PhoneNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about the integration.</summary>
    public class Integration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Information about webhook for an agent. If a webhook is configured at an agent level, it will
        /// override the webhook at the partner level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentWebhookIntegration")]
        public virtual AgentWebhookIntegration AgentWebhookIntegration { get; set; } 

        /// <summary>Information about an associated Dialogflow CX project.
        /// https://cloud.google.com/dialogflow/cx/docs/basics</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowCxIntegration")]
        public virtual DialogflowCxIntegration DialogflowCxIntegration { get; set; } 

        /// <summary>Information about an associated Dialogflow ES project.
        /// https://cloud.google.com/dialogflow/es/docs</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowEsIntegration")]
        public virtual DialogflowEsIntegration DialogflowEsIntegration { get; set; } 

        /// <summary>Output only. The unique identifier of the integration. Read-only. Defined by the
        /// platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Output only. Integration status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Returns a list of agent performances.</summary>
    public class ListAgentPerformancesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of agent performances.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentPerformances")]
        public virtual System.Collections.Generic.IList<AgentPerformance> AgentPerformances { get; set; } 

        /// <summary>Optional. The pagination token to retrieve the next page of results. If the value is "", it means
        /// no further results for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of agents.</summary>
    public class ListAgentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of agent information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agents")]
        public virtual System.Collections.Generic.IList<Agent> Agents { get; set; } 

        /// <summary>The pagination token to retrieve the next page of results. If the value is "", it means no further
        /// results for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of brands.</summary>
    public class ListBrandsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of brand information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("brands")]
        public virtual System.Collections.Generic.IList<Brand> Brands { get; set; } 

        /// <summary>The pagination token to retrieve the next page of results. If the value is "", it means no further
        /// results for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of critical agents.</summary>
    public class ListCriticalAgentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of critical agents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("criticalAgents")]
        public virtual System.Collections.Generic.IList<CriticalAgent> CriticalAgents { get; set; } 

        /// <summary>Optional. The pagination token to retrieve the next page of results. If the value is "", it means
        /// no further results for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response for ListIntegrations.</summary>
    public class ListIntegrationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of integrations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("integrations")]
        public virtual System.Collections.Generic.IList<Integration> Integrations { get; set; } 

        /// <summary>Currently this field is unsupported because the number of agent-level integrations is too few for
        /// pagination to be needed. The pagination token to retrieve the next page of results. If the value is "", it
        /// means no further results for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of all RCS for Business regions.</summary>
    public class ListRegionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of all RCS for Business regions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regions")]
        public virtual System.Collections.Generic.IList<RcsBusinessMessagingRegion> Regions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of subscriber profiles.</summary>
    public class ListSubscriberProfilesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The pagination token to retrieve the next page of results. If the value is "", it means
        /// no further results for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>List of subscriberProfile information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscriberProfiles")]
        public virtual System.Collections.Generic.IList<SubscriberProfile> SubscriberProfiles { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A list of all Google provided template questions.</summary>
    public class ListSurveyQuestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of Google provided template survey question information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("surveyQuestions")]
        public virtual System.Collections.Generic.IList<SurveyQuestion> SurveyQuestions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Response for ListTesters.</summary>
    public class ListTestersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of testers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testers")]
        public virtual System.Collections.Generic.IList<Tester> Testers { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The Dialogflow operation information.</summary>
    public class OperationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Error result, if any.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; } 

        /// <summary>Output only. The server-assigned name (operation Id), which is only unique within the same service
        /// that originally returns it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationName")]
        public virtual string OperationName { get; set; } 

        /// <summary>Output only. Dialogflow Operation state.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationState")]
        public virtual string OperationState { get; set; } 

        /// <summary>Output only. Dialogflow Operation type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationType")]
        public virtual string OperationType { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Partner that is onboarded with a supported product.</summary>
    public class Partner : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The company name of the partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("company")]
        public virtual string Company { get; set; } 

        /// <summary>Optional. The list of contact emails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactEmails")]
        public virtual System.Collections.Generic.IList<string> ContactEmails { get; set; } 

        /// <summary>Output only. Service account with access to the Dialogflow Client API role. This account is created
        /// by the platform and provides access to Dialogflow.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowServiceAccountEmail")]
        public virtual string DialogflowServiceAccountEmail { get; set; } 

        /// <summary>Required. The display name of the partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Immutable. The unique identifier of the partner. Defined by the platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The product capabilities of the partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("productCapabilities")]
        public virtual System.Collections.Generic.IList<ProductCapability> ProductCapabilities { get; set; } 

        /// <summary>Optional. The technical point of contact of the partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("technicalContact")]
        public virtual GoogleCommunicationsBusinesscommunicationsV1PartnerContact TechnicalContact { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Partner associated with the agent.</summary>
    public class PartnerEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The public name of the company for the given partner. E.g. Twilio, HeyMarket
        /// etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("company")]
        public virtual string Company { get; set; } 

        /// <summary>Output only. The name that will be displayed to businesses to associate partners for products.
        /// Should be unique among partners.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>Output only. Unique identifier for partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partnerId")]
        public virtual string PartnerId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Phone number.</summary>
    public class Phone : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Phone number string in E.164 format or unformatted local/toll-free number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("number")]
        public virtual string Number { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A phone number associated with the agent.</summary>
    public class PhoneEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Label for the phone number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>Required. Phone number in two possible formats: either the full E.164 format (for example,
        /// "+12223334444") or an unformatted local/toll-free phone number without '+', prefix, or country code (for
        /// example, "6502530000"). Note: emergency numbers are not allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual Phone PhoneNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The product capabilities that the partner supports.</summary>
    public class ProductCapability : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The product supported by the partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("product")]
        public virtual string Product { get; set; } 

        /// <summary>RCS for Business capability = 4;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rcsBusinessMessagingCapability")]
        public virtual RcsBusinessMessagingCapability RcsBusinessMessagingCapability { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>If Google manages the launch region, questionnaire details are available to Google for the purpose of
    /// reviewing the agent's launch.</summary>
    public class Questionnaire : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Agent access instructions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentAccessInstructions")]
        public virtual string AgentAccessInstructions { get; set; } 

        /// <summary>Required. Point of contacts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contacts")]
        public virtual System.Collections.Generic.IList<Contact> Contacts { get; set; } 

        /// <summary>Required. Description of interactions the agent will have with users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interactionsDescription")]
        public virtual string InteractionsDescription { get; set; } 

        /// <summary>Optional. Description of how you obtain opt-in to message users with the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optinDescription")]
        public virtual string OptinDescription { get; set; } 

        /// <summary>Required. Description of the message the agent sends when a user opts out.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optoutDescription")]
        public virtual string OptoutDescription { get; set; } 

        /// <summary>Optional. Publicly available URIs for screenshots of the agent. For review purposes only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("screenshotUris")]
        public virtual System.Collections.Generic.IList<string> ScreenshotUris { get; set; } 

        /// <summary>Required. Description of actions that trigger messages to users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerDescription")]
        public virtual string TriggerDescription { get; set; } 

        /// <summary>Optional. Publicly available URIs for videos of the agent. For review purposes only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoUris")]
        public virtual System.Collections.Generic.IList<string> VideoUris { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Agent information specifically related to RCS for Business. For agent creation, it's recommended to
    /// provide at least one contact method (phone, email, or website) with a corresponding label. For agent launch, at
    /// least one phone or email contact with a corresponding label is required.</summary>
    public class RcsBusinessMessagingAgent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Use case of bot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUseCase")]
        public virtual string AgentUseCase { get; set; } 

        /// <summary>Required. Billing configuration for the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingConfig")]
        public virtual RcsBusinessMessagingAgentBillingConfig BillingConfig { get; set; } 

        /// <summary>Required. Theme color of the agent that is visible to users in hex format. For example,
        /// #FF6347.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("color")]
        public virtual string Color { get; set; } 

        /// <summary>Required. Description of the agent that is visible to users. Maximum 100 characters. See [Edit
        /// agent information](https://developers.google.com/business-communications/rcs-business-
        /// messaging/guides/build/agents/edit-agent-information?hl=en#edit_your_agents_information) for detailed
        /// requirements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        /// <summary>Optional. Email addresses associated with the agent. Required if phone number and website are not
        /// provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emails")]
        public virtual System.Collections.Generic.IList<EmailEntry> Emails { get; set; } 

        /// <summary>Required. Publicly available URL of the hero image for the agent. Maximum 200 KB. Not modifiable
        /// after agent verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("heroUri")]
        public virtual string HeroUri { get; set; } 

        /// <summary>Required. Hosting region for an agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hostingRegion")]
        public virtual string HostingRegion { get; set; } 

        /// <summary>Output only. Launch details for the agent. Only populated for carriers, and only with the launch
        /// details related to the carrier making the call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("launchDetails")]
        public virtual System.Collections.Generic.IDictionary<string,RcsBusinessMessagingRegionLaunch> LaunchDetails { get; set; } 

        /// <summary>Required. Publicly available URL of the logo for the agent. Maximum 50 KB. Not modifiable after
        /// agent verification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logoUri")]
        public virtual string LogoUri { get; set; } 

        /// <summary>Output only. Partner associated with the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partner")]
        public virtual PartnerEntry Partner { get; set; } 

        /// <summary>Optional. Phone numbers associated with the agent. Required if email and website are not
        /// provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumbers")]
        public virtual System.Collections.Generic.IList<PhoneEntry> PhoneNumbers { get; set; } 

        /// <summary>Required. Privacy policy associated with the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacy")]
        public virtual WebEntry Privacy { get; set; } 

        /// <summary>Required. Terms and conditions associated with the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("termsConditions")]
        public virtual WebEntry TermsConditions { get; set; } 

        /// <summary>Optional. Websites associated with the agent. Maximum 3. Required if phone number and email are not
        /// provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websites")]
        public virtual System.Collections.Generic.IList<WebEntry> Websites { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Billing configuration for the agent.</summary>
    public class RcsBusinessMessagingAgentBillingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Billing category for the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingCategory")]
        public virtual string BillingCategory { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>RCS for Business capabilities</summary>
    public class RcsBusinessMessagingCapability : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The webhook URL where the messages are delivered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookUrl")]
        public virtual string WebhookUrl { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details about an RCS for Business agent launch.</summary>
    public class RcsBusinessMessagingLaunch : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Launch details for each supported region. Key represented by
        /// RcsBusinessMessagingRegion.name. To launch an agent (when the agent hasn't launched before), add an object
        /// containing a map of only keys for all regions you want the agent to launch to. To launch an agent (when the
        /// agent has launched before), add an object containing a map of only keys for all regions the agent is already
        /// launched on and all regions the agent wants to launch to. For more information, see the Launch an agent to
        /// one or more regions documentation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("launchDetails")]
        public virtual System.Collections.Generic.IDictionary<string,RcsBusinessMessagingRegionLaunch> LaunchDetails { get; set; } 

        /// <summary>Launch region for an agent. Ignored: This field is deprecated. Hosting region can only be specified
        /// during agent creation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("launchRegion")]
        public virtual string LaunchRegion { get; set; } 

        /// <summary>Required. Questionnaire about agent launch details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("questionnaire")]
        public virtual Questionnaire Questionnaire { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>RCS for Business region information.</summary>
    public class RcsBusinessMessagingRegion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The display name of the region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The management type of the region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("managementType")]
        public virtual string ManagementType { get; set; } 

        /// <summary>Required. The identifier for the region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details about RCS for Business agent launch for each region.</summary>
    public class RcsBusinessMessagingRegionLaunch : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Specifies the party designation of the agent launch.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentLaunchPartyDesignation")]
        public virtual string AgentLaunchPartyDesignation { get; set; } 

        /// <summary>Comment from the carrier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; } 

        /// <summary>The launch state for a region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("launchState")]
        public virtual string LaunchState { get; set; } 

        /// <summary>Last updated time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to launch an agent.</summary>
    public class RequestAgentLaunchRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The agent launch to create. Name and Launch status are ignored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentLaunch")]
        public virtual AgentLaunch AgentLaunch { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Request to begin business information verification for an agent.</summary>
    public class RequestAgentVerificationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Verification contact details for the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentVerificationContact")]
        public virtual AgentVerificationContact AgentVerificationContact { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status`
    /// message contains three pieces of data: error code, error message, and error details. You can find out more about
    /// this error model and how to work with it in the [API Design
    /// Guide](https://cloud.google.com/apis/design/errors).</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details. There is a common set of message types for APIs to
        /// use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>RCS for Business subscriber profile information.</summary>
    public class SubscriberProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. If true, no messages are sent to this number unless they are from critical agents. If
        /// false, no messages are sent to this number from agents on blockedAgentIds list. If not specified, will
        /// default to false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blockAll")]
        public virtual System.Nullable<bool> BlockAll { get; set; } 

        /// <summary>Optional. Cannot send messages even if block_all is false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blockedAgentIds")]
        public virtual System.Collections.Generic.IList<string> BlockedAgentIds { get; set; } 

        /// <summary>Required. Output only. Identifier. The phone number of the subscriber profile in E.164
        /// format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>For carriers that disallow test devices by default, this means that the phone number can receive
        /// test messages even for such a carrier. For carriers that allow test devices, this does nothing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testingAllowed")]
        public virtual System.Nullable<bool> TestingAllowed { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The detailed content of each survey question.</summary>
    public class SurveyQuestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The unique identifier of the question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Required. Question content. Limited to 200 characters for custom questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("questionContent")]
        public virtual string QuestionContent { get; set; } 

        /// <summary>Output only. Type of the question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("questionType")]
        public virtual string QuestionType { get; set; } 

        /// <summary>Required. List of responses displayed with the question. Maximum 12.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseOptions")]
        public virtual System.Collections.Generic.IList<SurveyResponse> ResponseOptions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The content for a survey question response.</summary>
    public class SurveyResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Text that is shown in the survey and sent back to the agent when the user taps it.
        /// Maximum 35 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; } 

        /// <summary>The string the agent receives when the user taps the question response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postbackData")]
        public virtual string PostbackData { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A tester for the agent. The agent can interact with verified testers even if the agent has not yet
    /// launched.</summary>
    public class Tester : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Agent ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentId")]
        public virtual string AgentId { get; set; } 

        /// <summary>Output only. The status of the invitation. Read-only. Returned by the platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inviteStatus")]
        public virtual string InviteStatus { get; set; } 

        /// <summary>Output only. ReadOnly. The unique identifier of the tester. This field should resolve to
        /// "testers/{E.164}" where {E.164} is the tester's phone number in E.164 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Required. The phone number of the tester in E.164 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A web-based resource associated with the agent.</summary>
    public class WebEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Label for the URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        /// <summary>Required. A publicly accessible URI associated with the agent. Must use the HTTP or HTTPS
        /// protocol.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}

namespace Google.Apis.BusinessCommunications.v1
{
    /// <summary>The BusinessCommunications Service.</summary>
    public class BusinessCommunicationsService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public BusinessCommunicationsService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public BusinessCommunicationsService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            analytics = new AnalyticsResource(this);
            brands = new BrandsResource(this);
            criticalAgents = new CriticalAgentsResource(this);
            partners = new PartnersResource(this);
            regions = new RegionsResource(this);
            subscriberProfiles = new SubscriberProfilesResource(this);
            surveyQuestions = new SurveyQuestionsResource(this);
            testers = new TestersResource(this);
            v1 = new V1Resource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "businesscommunications"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://businesscommunications.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }





        private readonly AnalyticsResource analytics;

        /// <summary>Gets the Analytics resource.</summary>
        public virtual AnalyticsResource Analytics
        {
            get { return analytics; }
        }

        private readonly BrandsResource brands;

        /// <summary>Gets the Brands resource.</summary>
        public virtual BrandsResource Brands
        {
            get { return brands; }
        }

        private readonly CriticalAgentsResource criticalAgents;

        /// <summary>Gets the CriticalAgents resource.</summary>
        public virtual CriticalAgentsResource CriticalAgents
        {
            get { return criticalAgents; }
        }

        private readonly PartnersResource partners;

        /// <summary>Gets the Partners resource.</summary>
        public virtual PartnersResource Partners
        {
            get { return partners; }
        }

        private readonly RegionsResource regions;

        /// <summary>Gets the Regions resource.</summary>
        public virtual RegionsResource Regions
        {
            get { return regions; }
        }

        private readonly SubscriberProfilesResource subscriberProfiles;

        /// <summary>Gets the SubscriberProfiles resource.</summary>
        public virtual SubscriberProfilesResource SubscriberProfiles
        {
            get { return subscriberProfiles; }
        }

        private readonly SurveyQuestionsResource surveyQuestions;

        /// <summary>Gets the SurveyQuestions resource.</summary>
        public virtual SurveyQuestionsResource SurveyQuestions
        {
            get { return surveyQuestions; }
        }

        private readonly TestersResource testers;

        /// <summary>Gets the Testers resource.</summary>
        public virtual TestersResource Testers
        {
            get { return testers; }
        }

        private readonly V1Resource v1;

        /// <summary>Gets the V1 resource.</summary>
        public virtual V1Resource V1
        {
            get { return v1; }
        }
    }

    ///<summary>A base abstract class for BusinessCommunications requests.</summary>
    public abstract class BusinessCommunicationsBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new BusinessCommunicationsBaseServiceRequest instance.</summary>
        protected BusinessCommunicationsBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes BusinessCommunications parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "analytics" collection of methods.</summary>
    public class AnalyticsResource
    {
        private const string Resource = "analytics";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AnalyticsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            agentPerformances = new AgentPerformancesResource(service);

        }

        private readonly AgentPerformancesResource agentPerformances;

        /// <summary>Gets the AgentPerformances resource.</summary>
        public virtual AgentPerformancesResource AgentPerformances
        {
            get { return agentPerformances; }
        }

        /// <summary>The "agentPerformances" collection of methods.</summary>
        public class AgentPerformancesResource
        {
            private const string Resource = "agentPerformances";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AgentPerformancesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Lists agent performance data accessible to the caller. Each result represents the performance
            /// metrics for a specific agent in a specific country. If an agent has insufficient data for a given
            /// country, no performance record for that agent-country pair is returned.</summary>
            public virtual ListRequest List()
            {
                return new ListRequest(service);
            }

            /// <summary>Lists agent performance data accessible to the caller. Each result represents the performance
            /// metrics for a specific agent in a specific country. If an agent has insufficient data for a given
            /// country, no performance record for that agent-country pair is returned.</summary>
            public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListAgentPerformancesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service)
                    : base(service)
                {
                    InitParameters();
                }


                /// <summary>Optional. Specify the maximum number of results to be returned by the server. The server
                /// may further constrain the maximum number of results returned in a single page. If the page_size is
                /// 0, the server will decide the number of results to be returned. The maximum page_size is
                /// 1000.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Optional. The next_page_token value returned from a previous List request, if
                /// any.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/analytics/agentPerformances"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
    }

    /// <summary>The "brands" collection of methods.</summary>
    public class BrandsResource
    {
        private const string Resource = "brands";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BrandsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            agents = new AgentsResource(service);

        }

        private readonly AgentsResource agents;

        /// <summary>Gets the Agents resource.</summary>
        public virtual AgentsResource Agents
        {
            get { return agents; }
        }

        /// <summary>The "agents" collection of methods.</summary>
        public class AgentsResource
        {
            private const string Resource = "agents";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AgentsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                integrations = new IntegrationsResource(service);

            }

            private readonly IntegrationsResource integrations;

            /// <summary>Gets the Integrations resource.</summary>
            public virtual IntegrationsResource Integrations
            {
                get { return integrations; }
            }

            /// <summary>The "integrations" collection of methods.</summary>
            public class IntegrationsResource
            {
                private const string Resource = "integrations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public IntegrationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Create an integration.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
                /// identifier is "5678", this parameter resolves to "brands/1234/agents/5678".</param>
                public virtual CreateRequest Create(Google.Apis.BusinessCommunications.v1.Data.Integration body, string parent)
                {
                    return new CreateRequest(service, body, parent);
                }

                /// <summary>Create an integration.</summary>
                public class CreateRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Integration>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Integration body, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Required. The unique identifier of the agent. If the brand identifier is "1234" and the
                    /// agent identifier is "5678", this parameter resolves to "brands/1234/agents/5678".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.BusinessCommunications.v1.Data.Integration Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+parent}/integrations"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^brands/[^/]+/agents/[^/]+$",
                            });
                    }

                }

                /// <summary>Delete an integration.</summary>
                /// <param name="name">Required. The unique identifier of the integration. If the brand identifier is "1234", the agent
                /// identifier is "5678", and the integration identifier is "9092", this parameter resolves to
                /// "brands/1234/agents/5678/integrations/9092".</param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(service, name);
                }

                /// <summary>Delete an integration.</summary>
                public class DeleteRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>Required. The unique identifier of the integration. If the brand identifier is "1234",
                    /// the agent identifier is "5678", and the integration identifier is "9092", this parameter
                    /// resolves to "brands/1234/agents/5678/integrations/9092".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+name}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^brands/[^/]+/agents/[^/]+/integrations/[^/]+$",
                            });
                    }

                }

                /// <summary>Get an integration.</summary>
                /// <param name="name">Required. The unique identifier of the integration. If the brand identifier is "1234", the agent
                /// identifier is "5678", and the integration identifier is "9092", this parameter resolves to
                /// "brands/1234/agents/5678/integrations/9092".</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(service, name);
                }

                /// <summary>Get an integration.</summary>
                public class GetRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Integration>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>Required. The unique identifier of the integration. If the brand identifier is "1234",
                    /// the agent identifier is "5678", and the integration identifier is "9092", this parameter
                    /// resolves to "brands/1234/agents/5678/integrations/9092".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+name}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^brands/[^/]+/agents/[^/]+/integrations/[^/]+$",
                            });
                    }

                }

                /// <summary>List integrations.</summary>
                /// <param name="parent">Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
                /// identifier is "5678", this parameter resolves to "brands/1234/agents/5678".</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>List integrations.</summary>
                public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListIntegrationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>Required. The unique identifier of the agent. If the brand identifier is "1234" and the
                    /// agent identifier is "5678", this parameter resolves to "brands/1234/agents/5678".</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Currently this field is unsupported because the number of agent-level integrations is
                    /// too few for pagination to be needed. This field will be ignored if passed. Specify the maximum
                    /// number of results for the server to return. The server may further limit the maximum number of
                    /// results returned per page. If the page_size is 0, the server will decide how many results are
                    /// returned. Optional</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Currently this field is unsupported as the number of agent-level integrations is too
                    /// few for pagination to be needed. This field will be ignored if passed. The next_page_token value
                    /// returned from a previous List request, if any. Optional</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+parent}/integrations"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^brands/[^/]+/agents/[^/]+$",
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Update an integration. For adding a DialogflowDocument, only the
                /// "dialogflow_es_integration.dialogflow_knowledge_bases" flag should be specified. Adding a document
                /// should be an isolated update.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">Output only. The unique identifier of the integration. Read-only. Defined by the
                /// platform.</param>
                public virtual PatchRequest Patch(Google.Apis.BusinessCommunications.v1.Data.Integration body, string name)
                {
                    return new PatchRequest(service, body, name);
                }

                /// <summary>Update an integration. For adding a DialogflowDocument, only the
                /// "dialogflow_es_integration.dialogflow_knowledge_bases" flag should be specified. Adding a document
                /// should be an isolated update.</summary>
                public class PatchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Integration>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Integration body, string name)
                        : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Output only. The unique identifier of the integration. Read-only. Defined by the
                    /// platform.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Required. The update mask applies to the resource. For the FieldMask definition, see
                    /// https://developers.google.com/protocol-
                    /// buffers/docs/reference/google.protobuf#fieldmask</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.BusinessCommunications.v1.Data.Integration Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "patch"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PATCH"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1/{+name}"; }
                    }

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^brands/[^/]+/agents/[^/]+/integrations/[^/]+$",
                            });
                        RequestParameters.Add(
                            "updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }

            /// <summary>Creates a new agent to represent a brand.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">Required. The unique identifier of the brand the agent represents. If the brand identifier is
            /// "1234", this parameter is "brands/1234".</param>
            public virtual CreateRequest Create(Google.Apis.BusinessCommunications.v1.Data.Agent body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Creates a new agent to represent a brand.</summary>
            public class CreateRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Agent>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Agent body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the brand the agent represents. If the brand identifier
                /// is "1234", this parameter is "brands/1234".</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.BusinessCommunications.v1.Data.Agent Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/agents"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+$",
                        });
                }

            }

            /// <summary>Deprecated: agent deletion is deprecated. Please contact customer support.</summary>
            /// <param name="name">Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
            /// identifier is "5678", this parameter resolves to "brands/1234/agents/5668".</param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(service, name);
            }

            /// <summary>Deprecated: agent deletion is deprecated. Please contact customer support.</summary>
            public class DeleteRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Empty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the agent. If the brand identifier is "1234" and the
                /// agent identifier is "5678", this parameter resolves to "brands/1234/agents/5668".</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "delete"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "DELETE"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+$",
                        });
                }

            }

            /// <summary>Get information about an agent.</summary>
            /// <param name="name">Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
            /// identifier is "5678", this parameter resolves to "brands/1234/agents/5668".</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Get information about an agent.</summary>
            public class GetRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Agent>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the agent. If the brand identifier is "1234" and the
                /// agent identifier is "5678", this parameter resolves to "brands/1234/agents/5668".</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the launch information for an agent.</summary>
            /// <param name="name">Required. The unique identifier of the agent launch.</param>
            public virtual GetLaunchRequest GetLaunch(string name)
            {
                return new GetLaunchRequest(service, name);
            }

            /// <summary>Gets the launch information for an agent.</summary>
            public class GetLaunchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.AgentLaunch>
            {
                /// <summary>Constructs a new GetLaunch request.</summary>
                public GetLaunchRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the agent launch.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "getLaunch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes GetLaunch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+/launch$",
                        });
                }

            }

            /// <summary>Gets the verification information for an agent. *Note*: Refer to the [brand verification
            /// FAQ](https://developers.google.com/business-communications/rcs-business-messaging/guides/launch/brand-
            /// verification) for more information about the verification process.</summary>
            /// <param name="name">Required. The unique identifier of the brand and agent verification.</param>
            public virtual GetVerificationRequest GetVerification(string name)
            {
                return new GetVerificationRequest(service, name);
            }

            /// <summary>Gets the verification information for an agent. *Note*: Refer to the [brand verification
            /// FAQ](https://developers.google.com/business-communications/rcs-business-messaging/guides/launch/brand-
            /// verification) for more information about the verification process.</summary>
            public class GetVerificationRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.AgentVerification>
            {
                /// <summary>Constructs a new GetVerification request.</summary>
                public GetVerificationRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the brand and agent verification.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "getVerification"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes GetVerification parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+/verification$",
                        });
                }

            }

            /// <summary>Lists all the agents associated with a brand. *Note*: This method always sets `pageSize` to
            /// `0`.</summary>
            /// <param name="parent">Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
            /// resolves to "brands/1234". The brand identifier must be "-" to return all agents for an RBM carrier.</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists all the agents associated with a brand. *Note*: This method always sets `pageSize` to
            /// `0`.</summary>
            public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListAgentsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the brand. If the brand identifier is "1234", this
                /// parameter resolves to "brands/1234". The brand identifier must be "-" to return all agents for an
                /// RBM carrier.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Specify the maximum number of results to be returned by the server. The server may further
                /// constrain the maximum number of results returned in a single page. If the page_size is 0, the server
                /// will decide the number of results to be returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The next_page_token value returned from a previous List request, if any.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Optional. Only return agents with this launch state. Works only when used by
                /// carriers.</summary>
                [Google.Apis.Util.RequestParameterAttribute("launchStateFilter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<LaunchStateFilterEnum> LaunchStateFilter { get; set; }

                /// <summary>Optional. Only return agents with this launch state. Works only when used by
                /// carriers.</summary>
                public enum LaunchStateFilterEnum
                {
                    /// <summary>Unspecified state.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_UNSPECIFIED")]
                    LAUNCHSTATEUNSPECIFIED,
                    /// <summary>Entity is unlaunched.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_UNLAUNCHED")]
                    LAUNCHSTATEUNLAUNCHED,
                    /// <summary>Launch in review.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_PENDING")]
                    LAUNCHSTATEPENDING,
                    /// <summary>Launched.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_LAUNCHED")]
                    LAUNCHSTATELAUNCHED,
                    /// <summary>Launch is rejected.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_REJECTED")]
                    LAUNCHSTATEREJECTED,
                    /// <summary>Launch is suspended.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_SUSPENDED")]
                    LAUNCHSTATESUSPENDED,
                    /// <summary>Unlaunch in review.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_PENDING_UNLAUNCH")]
                    LAUNCHSTATEPENDINGUNLAUNCH,
                    /// <summary>Launch is invalid because the associated Google My Business Listing doesn't support
                    /// messaging. Reverifying in Google My Business automatically relaunches here. Only applicable for
                    /// locations.</summary>
                    [Google.Apis.Util.StringValueAttribute("LAUNCH_STATE_INVALID_IN_GMB")]
                    LAUNCHSTATEINVALIDINGMB,
                }

                /// <summary>If true, launch data (without questionnaire) is included in the agent response. Works only
                /// when used by carriers.</summary>
                [Google.Apis.Util.RequestParameterAttribute("includeLaunchData", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> IncludeLaunchData { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+parent}/agents"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "launchStateFilter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "launchStateFilter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "includeLaunchData", new Google.Apis.Discovery.Parameter
                        {
                            Name = "includeLaunchData",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates information about an agent. *Caution*: If you update a field that takes a list as
            /// input, you must include the entire list in the update request. Updates to list fields replace the entire
            /// list.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The unique identifier of the agent. Read-only. Defined by the platform.</param>
            public virtual PatchRequest Patch(Google.Apis.BusinessCommunications.v1.Data.Agent body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates information about an agent. *Caution*: If you update a field that takes a list as
            /// input, you must include the entire list in the update request. Updates to list fields replace the entire
            /// list.</summary>
            public class PatchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Agent>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Agent body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The unique identifier of the agent. Read-only. Defined by the platform.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The update mask applies to the resource. For the FieldMask definition, see
                /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.BusinessCommunications.v1.Data.Agent Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Begins the launch process for an agent. An agent is available to users after it launches. An
            /// agent can only have one instance of launch at a time.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Required. The unique identifier of the agent. If the brand identifier is "1234" and the agent
            /// identifier is "5678", this parameter resolves to "brands/1234/agents/5678".</param>
            public virtual RequestLaunchRequest RequestLaunch(Google.Apis.BusinessCommunications.v1.Data.RequestAgentLaunchRequest body, string name)
            {
                return new RequestLaunchRequest(service, body, name);
            }

            /// <summary>Begins the launch process for an agent. An agent is available to users after it launches. An
            /// agent can only have one instance of launch at a time.</summary>
            public class RequestLaunchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.AgentLaunch>
            {
                /// <summary>Constructs a new RequestLaunch request.</summary>
                public RequestLaunchRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.RequestAgentLaunchRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the agent. If the brand identifier is "1234" and the
                /// agent identifier is "5678", this parameter resolves to "brands/1234/agents/5678".</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.BusinessCommunications.v1.Data.RequestAgentLaunchRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "requestLaunch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:requestLaunch"; }
                }

                /// <summary>Initializes RequestLaunch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+$",
                        });
                }

            }

            /// <summary>Submits business verification information for an agent. Depending on the carrier(s) selected at
            /// launch, either the carrier(s) or Google will contact the brand for verification. Only 1 instance of
            /// verification is allowed at any given time. *Caution*: Verification is not performed until a launch is
            /// requested. *Note*: Refer to the [brand verification FAQ](https://developers.google.com/business-
            /// communications/rcs-business-messaging/guides/launch/brand-verification) for more information about the
            /// verification process.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Required. The unique identifier of the brand and agent.</param>
            public virtual RequestVerificationRequest RequestVerification(Google.Apis.BusinessCommunications.v1.Data.RequestAgentVerificationRequest body, string name)
            {
                return new RequestVerificationRequest(service, body, name);
            }

            /// <summary>Submits business verification information for an agent. Depending on the carrier(s) selected at
            /// launch, either the carrier(s) or Google will contact the brand for verification. Only 1 instance of
            /// verification is allowed at any given time. *Caution*: Verification is not performed until a launch is
            /// requested. *Note*: Refer to the [brand verification FAQ](https://developers.google.com/business-
            /// communications/rcs-business-messaging/guides/launch/brand-verification) for more information about the
            /// verification process.</summary>
            public class RequestVerificationRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.AgentVerification>
            {
                /// <summary>Constructs a new RequestVerification request.</summary>
                public RequestVerificationRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.RequestAgentVerificationRequest body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Required. The unique identifier of the brand and agent.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.BusinessCommunications.v1.Data.RequestAgentVerificationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "requestVerification"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}:requestVerification"; }
                }

                /// <summary>Initializes RequestVerification parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+$",
                        });
                }

            }

            /// <summary>Updates the launch information for an agent.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Required. The identifier for launch.</param>
            public virtual UpdateLaunchRequest UpdateLaunch(Google.Apis.BusinessCommunications.v1.Data.AgentLaunch body, string name)
            {
                return new UpdateLaunchRequest(service, body, name);
            }

            /// <summary>Updates the launch information for an agent.</summary>
            public class UpdateLaunchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.AgentLaunch>
            {
                /// <summary>Constructs a new UpdateLaunch request.</summary>
                public UpdateLaunchRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.AgentLaunch body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Required. The identifier for launch.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The update mask applies to the resource. For the FieldMask definition, see
                /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.BusinessCommunications.v1.Data.AgentLaunch Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "updateLaunch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes UpdateLaunch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+/launch$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates the verification state for an agent. *Note*: Refer to the [brand verification
            /// FAQ](https://developers.google.com/business-communications/rcs-business-messaging/guides/launch/brand-
            /// verification) for more information about the verification process.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">Required. The identifier for verification.</param>
            public virtual UpdateVerificationRequest UpdateVerification(Google.Apis.BusinessCommunications.v1.Data.AgentVerification body, string name)
            {
                return new UpdateVerificationRequest(service, body, name);
            }

            /// <summary>Updates the verification state for an agent. *Note*: Refer to the [brand verification
            /// FAQ](https://developers.google.com/business-communications/rcs-business-messaging/guides/launch/brand-
            /// verification) for more information about the verification process.</summary>
            public class UpdateVerificationRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.AgentVerification>
            {
                /// <summary>Constructs a new UpdateVerification request.</summary>
                public UpdateVerificationRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.AgentVerification body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Required. The identifier for verification.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The update mask applies to the resource. For the FieldMask definition, see
                /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.BusinessCommunications.v1.Data.AgentVerification Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "updateVerification"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+name}"; }
                }

                /// <summary>Initializes UpdateVerification parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^brands/[^/]+/agents/[^/]+/verification$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Creates a new brand.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.BusinessCommunications.v1.Data.Brand body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Creates a new brand.</summary>
        public class CreateRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Brand>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Brand body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.BusinessCommunications.v1.Data.Brand Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/brands"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Deletes a brand. If the brand has any associated agents or locations, the delete request fails
        /// unless `force` is `true`.</summary>
        /// <param name="name">Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
        /// resolves to "brands/1234".</param>
        public virtual DeleteRequest Delete(string name)
        {
            return new DeleteRequest(service, name);
        }

        /// <summary>Deletes a brand. If the brand has any associated agents or locations, the delete request fails
        /// unless `force` is `true`.</summary>
        public class DeleteRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Empty>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
            /// resolves to "brands/1234".</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>For non-RBM cases: if true, any agents and locations associated with this brand are also
            /// deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("force", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Force { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^brands/[^/]+$",
                    });
                RequestParameters.Add(
                    "force", new Google.Apis.Discovery.Parameter
                    {
                        Name = "force",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets information about a brand.</summary>
        /// <param name="name">Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
        /// resolves to "brands/1234".</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets information about a brand.</summary>
        public class GetRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Brand>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The unique identifier of the brand. If the brand identifier is "1234", this parameter
            /// resolves to "brands/1234".</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^brands/[^/]+$",
                    });
            }

        }

        /// <summary>Lists all the brands accessible to the user making the request. *Note*: This method always sets
        /// `pageSize` to `0`.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists all the brands accessible to the user making the request. *Note*: This method always sets
        /// `pageSize` to `0`.</summary>
        public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListBrandsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Specify the maximum number of results to be returned by the server. The server may further
            /// constrain the maximum number of results returned in a single page. If the page_size is 0, the server
            /// will decide the number of results to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>The next_page_token value returned from a previous List request, if any.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/brands"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates information about a brand. *Caution*: If you update a field that takes a list as input, you
        /// must include the entire list in the update request. Updates to list fields replace the entire
        /// list.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">Output only. The unique identifier of the brand. Defined by the platform.</param>
        public virtual PatchRequest Patch(Google.Apis.BusinessCommunications.v1.Data.Brand body, string name)
        {
            return new PatchRequest(service, body, name);
        }

        /// <summary>Updates information about a brand. *Caution*: If you update a field that takes a list as input, you
        /// must include the entire list in the update request. Updates to list fields replace the entire
        /// list.</summary>
        public class PatchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Brand>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Brand body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>Output only. The unique identifier of the brand. Defined by the platform.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>The update mask applies to the resource. For the FieldMask definition, see
            /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object UpdateMask { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.BusinessCommunications.v1.Data.Brand Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^brands/[^/]+$",
                    });
                RequestParameters.Add(
                    "updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "criticalAgents" collection of methods.</summary>
    public class CriticalAgentsResource
    {
        private const string Resource = "criticalAgents";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CriticalAgentsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Creates a new critical agent.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.BusinessCommunications.v1.Data.CriticalAgent body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Creates a new critical agent.</summary>
        public class CreateRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.CriticalAgent>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.CriticalAgent body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.BusinessCommunications.v1.Data.CriticalAgent Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/criticalAgents"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Deletes a critical agent.</summary>
        /// <param name="name">Required. The unique identifier of the critical agent. If the critical agent identifier is
        /// "abc@rbm.goog", this parameter resolves to "criticalAgents/abc@rbm.goog".</param>
        public virtual DeleteRequest Delete(string name)
        {
            return new DeleteRequest(service, name);
        }

        /// <summary>Deletes a critical agent.</summary>
        public class DeleteRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Empty>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The unique identifier of the critical agent. If the critical agent identifier is
            /// "abc@rbm.goog", this parameter resolves to "criticalAgents/abc@rbm.goog".</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^criticalAgents/[^/]+$",
                    });
            }

        }

        /// <summary>Gets information about a critical agent.</summary>
        /// <param name="name">Required. The name of the criticalAgent to retrieve. Format: criticalAgents/{criticalAgent}, for
        /// example criticalAgents/abc@rbm.goog</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets information about a critical agent.</summary>
        public class GetRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.CriticalAgent>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The name of the criticalAgent to retrieve. Format: criticalAgents/{criticalAgent},
            /// for example criticalAgents/abc@rbm.goog</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^criticalAgents/[^/]+$",
                    });
            }

        }

        /// <summary>Lists all the critical agents accessible to the user making the request.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists all the critical agents accessible to the user making the request.</summary>
        public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListCriticalAgentsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Optional. Specify the maximum number of results to be returned by the server. The server may
            /// further constrain the maximum number of results returned in a single page. If the page_size is 0, the
            /// server will decide the number of results to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>Optional. The next_page_token value returned from a previous List request, if any.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/criticalAgents"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "partners" collection of methods.</summary>
    public class PartnersResource
    {
        private const string Resource = "partners";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PartnersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Get the information about the partner.</summary>
        /// <param name="name">Optional. The unique identifier of the partner.</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Get the information about the partner.</summary>
        public class GetRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Partner>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Optional. The unique identifier of the partner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^partners/[^/]+$",
                    });
            }

        }

        /// <summary>Updates the information for a partner.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">Immutable. The unique identifier of the partner. Defined by the platform.</param>
        public virtual PatchRequest Patch(Google.Apis.BusinessCommunications.v1.Data.Partner body, string name)
        {
            return new PatchRequest(service, body, name);
        }

        /// <summary>Updates the information for a partner.</summary>
        public class PatchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Partner>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Partner body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>Immutable. The unique identifier of the partner. Defined by the platform.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>The update mask applies to the resource. For the FieldMask definition, see
            /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object UpdateMask { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.BusinessCommunications.v1.Data.Partner Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^partners/[^/]+$",
                    });
                RequestParameters.Add(
                    "updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "regions" collection of methods.</summary>
    public class RegionsResource
    {
        private const string Resource = "regions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Lists all RCS for Business regions.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists all RCS for Business regions.</summary>
        public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListRegionsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/regions"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "subscriberProfiles" collection of methods.</summary>
    public class SubscriberProfilesResource
    {
        private const string Resource = "subscriberProfiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SubscriberProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes a subscriber profile.</summary>
        /// <param name="name">Required. The unique identifier of the subscriber profile, which is a phone number in E.164
        /// format.</param>
        public virtual DeleteRequest Delete(string name)
        {
            return new DeleteRequest(service, name);
        }

        /// <summary>Deletes a subscriber profile.</summary>
        public class DeleteRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Empty>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The unique identifier of the subscriber profile, which is a phone number in E.164
            /// format.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^subscriberProfiles/[^/]+$",
                    });
            }

        }

        /// <summary>Gets information about a subscriber profile.</summary>
        /// <param name="name">Required. The unique identifier of the subscriber profile, which is a phone number in E.164
        /// format.</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets information about a subscriber profile.</summary>
        public class GetRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.SubscriberProfile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The unique identifier of the subscriber profile, which is a phone number in E.164
            /// format.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^subscriberProfiles/[^/]+$",
                    });
            }

        }

        /// <summary>Lists all the subscriber profiles accessible to the user making the request. *Note*: This method
        /// always sets `pageSize` to `0`.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists all the subscriber profiles accessible to the user making the request. *Note*: This method
        /// always sets `pageSize` to `0`.</summary>
        public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListSubscriberProfilesResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Optional. Specify the maximum number of results to be returned by the server. The server may
            /// further constrain the maximum number of results returned in a single page. If the page_size is 0, the
            /// server will decide the number of results to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>Optional. The next_page_token value returned from a previous List request, if any.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/subscriberProfiles"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Creates a new subscriber profile or updates information about an existing subscriber profile.
        /// *Caution*: If you update a field that takes a list as input, you must include the entire list in the update
        /// request. Updates to list fields replace the entire list.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">Required. Output only. Identifier. The phone number of the subscriber profile in E.164
        /// format.</param>
        public virtual PatchRequest Patch(Google.Apis.BusinessCommunications.v1.Data.SubscriberProfile body, string name)
        {
            return new PatchRequest(service, body, name);
        }

        /// <summary>Creates a new subscriber profile or updates information about an existing subscriber profile.
        /// *Caution*: If you update a field that takes a list as input, you must include the entire list in the update
        /// request. Updates to list fields replace the entire list.</summary>
        public class PatchRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.SubscriberProfile>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.SubscriberProfile body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>Required. Output only. Identifier. The phone number of the subscriber profile in E.164
            /// format.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>Optional. The update mask applies to the resource. For the FieldMask definition, see
            /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object UpdateMask { get; set; }

            /// <summary>Optional. If set to true, and the subscriber profile is not found, a new subscriber profile
            /// will be created. In this situation, `update_mask` is ignored.</summary>
            [Google.Apis.Util.RequestParameterAttribute("allowMissing", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AllowMissing { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.BusinessCommunications.v1.Data.SubscriberProfile Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^subscriberProfiles/[^/]+$",
                    });
                RequestParameters.Add(
                    "updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "allowMissing", new Google.Apis.Discovery.Parameter
                    {
                        Name = "allowMissing",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "surveyQuestions" collection of methods.</summary>
    public class SurveyQuestionsResource
    {
        private const string Resource = "surveyQuestions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SurveyQuestionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Lists all Google predefined survey questions. *Note*: This method always sets `pageSize` to
        /// `0`.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists all Google predefined survey questions. *Note*: This method always sets `pageSize` to
        /// `0`.</summary>
        public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListSurveyQuestionsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Optional. List Google template questions by locale. Locale is represented by a well-formed IETF
            /// BCP 47 language tag. Default is EN.</summary>
            [Google.Apis.Util.RequestParameterAttribute("locale", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Locale { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/surveyQuestions"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "locale", new Google.Apis.Discovery.Parameter
                    {
                        Name = "locale",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "testers" collection of methods.</summary>
    public class TestersResource
    {
        private const string Resource = "testers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TestersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes a tester device.</summary>
        /// <param name="name">Required. The unique identifier of the tester. If tester phone number is "+1112223333", this
        /// parameter resolves to "testers/+1112223333".</param>
        public virtual DeleteRequest Delete(string name)
        {
            return new DeleteRequest(service, name);
        }

        /// <summary>Deletes a tester device.</summary>
        public class DeleteRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Empty>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The unique identifier of the tester. If tester phone number is "+1112223333", this
            /// parameter resolves to "testers/+1112223333".</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>Agent ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AgentId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^testers/[^/]+$",
                    });
                RequestParameters.Add(
                    "agentId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "agentId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Gets the invite status of a tester device.</summary>
        /// <param name="name">Required. The unique identifier of the tester. If the tester phone number is "+1112223333", this
        /// parameter resolves to "testers/+1112223333".</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets the invite status of a tester device.</summary>
        public class GetRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Tester>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>Required. The unique identifier of the tester. If the tester phone number is "+1112223333",
            /// this parameter resolves to "testers/+1112223333".</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>Agent ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AgentId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^testers/[^/]+$",
                    });
                RequestParameters.Add(
                    "agentId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "agentId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>List the invite statuses of tester devices.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>List the invite statuses of tester devices.</summary>
        public class ListRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.ListTestersResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Agent ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("agentId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AgentId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/testers"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "agentId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "agentId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "v1" collection of methods.</summary>
    public class V1Resource
    {
        private const string Resource = "v1";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public V1Resource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Sends an invite to a phone number to be added as a tester. The invited user must be RCS-enabled and
        /// reachable by the RBM platform. When an agent invites a user to become a tester, an RBM platform management
        /// agent sends a message to the user asking for confirmation that she wants to be a tester of the agent. Once
        /// the user confirms, she becomes a tester. An agent can send 20 tester requests each day with a total maximum
        /// of 200 tester requests. If you send tester requests above those limits, the RBM platform returns a `429
        /// RESOURCE_EXHAUSTED` response.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual TestersRequest Testers(Google.Apis.BusinessCommunications.v1.Data.Tester body)
        {
            return new TestersRequest(service, body);
        }

        /// <summary>Sends an invite to a phone number to be added as a tester. The invited user must be RCS-enabled and
        /// reachable by the RBM platform. When an agent invites a user to become a tester, an RBM platform management
        /// agent sends a message to the user asking for confirmation that she wants to be a tester of the agent. Once
        /// the user confirms, she becomes a tester. An agent can send 20 tester requests each day with a total maximum
        /// of 200 tester requests. If you send tester requests above those limits, the RBM platform returns a `429
        /// RESOURCE_EXHAUSTED` response.</summary>
        public class TestersRequest : BusinessCommunicationsBaseServiceRequest<Google.Apis.BusinessCommunications.v1.Data.Tester>
        {
            /// <summary>Constructs a new Testers request.</summary>
            public TestersRequest(Google.Apis.Services.IClientService service, Google.Apis.BusinessCommunications.v1.Data.Tester body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.BusinessCommunications.v1.Data.Tester Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "testers"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/testers"; }
            }

            /// <summary>Initializes Testers parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }
}
